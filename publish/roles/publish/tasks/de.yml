- name: make sure the Destination directory files/docker-compose/de is exit 
  file:
    path: "{{ files_path }}/docker-compose/de"
    state: directory

# volume for mysql
- name: archive mysql data
  archive:
    path: "/var/local/docker/de/mysql"
    dest: "{{ files_path }}/docker-compose/de/mysql.tar.gz"
  become: yes
  tags: 
    - mysql

#- name: copy mysql data to deploy
#  copy:
#    src: "/var/local/docker/de/mysql"
#    dest: "{{ files_path }}/docker-compose/de/"
#    owner: "{{ user }}"
#    group: "{{ group }}"
#    mode: 0755
#  tags:
#    - mysql_volumes
    
# volume for mongodb
- name: copy mongodb.conf to deploy
  copy:
    src: mongodb.conf
    dest: "{{ files_path}}/docker-compose/de/mongodb.conf"
    owner: "{{ user }}"
    group: "{{ group }}"

# volume for redis
- name: copy redis.conf to deploy
  copy:
    src: redis.conf
    dest: "{{ files_path }}/docker-compose/de/redis.conf"
    owner: "{{ user }}"
    group: "{{ group }}"

# copy docker-compose.yml for de
- name: Make sure composefile directory is exist
  file:
    path: "{{ compose_file_dir }}"
    state: directory
  tags: dir

- name: copy docker-compose.yml of de to deploy
  copy:
    src: "{{ devops_home_dir }}/devops/riskctl2.0/docker-compose.yml"
    dest: "{{ compose_file_dir }}/de-compose.yml"
  tags: dir

- name: copy compose.env of de to deploy
  copy: 
    src: "{{ devops_home_dir }}/devops/riskctl2.0/compose.env"
    dest: "{{ compose_file_dir }}/compose.env"
