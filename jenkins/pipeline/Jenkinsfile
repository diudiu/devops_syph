node{
  def reTarget = "rule-engine-2.3.0-SNAPSHOT.jar"
  def ffTarget = "ff.tar"
  def uiTarget = "ui.tar"
  def dnsTarget = "dnsmasq.tar"

  stage('Build re'){
      dir('re') {
        git url: 'https://git.coding.net/digcreditdev/rule-engine.git', branch: 'release', credentialsId: 'develop'

        sh "cp src/conf/application.properties src/main/resources/"

        sh "cp rule-engine.lic src/main/resources/license/"

        withEnv(["PATH+MAVEN=${tool 'maven-3.5.0'}/bin"]) {
            sh "mvn clean install"
        }

        junit 'target/surefire-reports/*.xml'
      }
  }

  stage('Build ff'){
      dir('ff') {
        git url: 'https://git.coding.net/digcreditdev/featurefactory.git', branch: 'develop12', credentialsId: 'develop'

        sh "cp featurefactory/celery_deploy.py featurefactory/celery_config.py"

        sh "cp featurefactory/settings_deploy.py featurefactory/settings.py"

        sh "cp apps/dispatcher/settings_deploy.py apps/dispatcher/settings.py"

        sh "rm -f *.tar"

        sh "tar --exclude='.git' --exclude='dataocean_flask' --exclude='studio/lp_combine_handler' --exclude='studio/lp_combine_handler' --exclude='studio/lp_dataocean_handler' --exclude='studio/test' -cvf ./${ffTarget} ."
      }
  }

  stage('Build ui'){
      dir('ui') {
        git url: 'https://git.coding.net/digcreditdev/rule-engine-ui.git', branch: 'xysong', credentialsId: 'develop'

        dir('webapp'){
            withEnv(["PATH+NODEJS=${tool 'nodejs-7'}/bin"]) {
                sh "npm install -g yarn@1.1.0"
                sh "yarn install"
                sh "npm run build"
            }
        }

        dir('webapp/dist'){
            sh "rm -f *.tar"
            sh "tar -cvf ./${uiTarget} ."
        }
      }
  }

  stage('Build docker images'){
    sh 'ssh -i /var/jenkins_home/secrets/ssh.key syphrd@192.168.1.100 "cd /home/syphrd/devops/devops/riskctl2.0/; python auto-build.py"'
  }

  stage('Push to aliyun'){
    sh 'ssh -i /var/jenkins_home/secrets/ssh.key syphrd@192.168.1.100 "cd /home/syphrd/devops/devops/riskctl2.0/; python push-image.py"'
  }

  stage('Build devops'){
    dir('devops') {
        git url: 'https://git.coding.net/digcreditdev/devops.git', branch: 'master', credentialsId: 'develop'
        dir('infra/dns'){
            sh "rm -f *.tar"
            sh "tar -cvf ./${dnsTarget} dnsmasq"
        }
    }
  }

  stage('Result'){
	def urlPrefix = "http://jenkins:8890/job/de-build/lastBuild/execution/node/3/ws"
	echo "re package: ${urlPrefix}/re/target/${reTarget}"
	echo "ff package: ${urlPrefix}/ff/${ffTarget}"
    echo "ui package: ${urlPrefix}/ui/webapp/dist/${uiTarget}"
    echo "dns package: ${urlPrefix}/devops/infra/dns/${dnsTarget}"
    echo "all docker images are available now on: http://hub:5008/"
    echo "infra compose file: ${urlPrefix}/devops/infra/docker-compose.yml"
    echo "de compose file: ${urlPrefix}/devops/riskctl2.0/docker-compose.yml"
    echo "elk compose file: ${urlPrefix}/devops/elk/docker-compose.yml"
  }
}
